<?php

use \Drupal\node\Entity\Node;
use Drupal\Core\Form\FormStateInterface;

function dynasty_theme_suggestions_node_alter(&$suggestions, $variables) {
  // Create custom front page node template.
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $suggestions[] = 'node__front';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dynasty_preprocess_node(&$variables) {

  $node = $variables['node'];
  /**
   * Game Node Overrides
   */
  if ($node->bundle() == 'game') {
    if ($node->get('field_ot')->value == '0') {
      $variables['ot'] = FALSE;
    }
    else {
      $variables['ot'] = TRUE;
    }
    if ($node->get('field_home_away')->value == "Home") {
      $variables['vs'] = 'vs';
    }
    else {
      $variables['vs'] = 'at';
    }
    // Team name variations.
    $opp = Node::load($node->get('field_opponent')->target_id);
    $variables['team_css'] =  str_replace(' ', '-', strtolower($opp->label()));
    $name_array = explode(' ', $opp->label());
    $team_short = end($name_array);
    $variables['team_short'] = $team_short;

    // Create pro-football-reference and NFL Gamepass links.
    $game_date = new DateTime($node->get('field_date')->value);
    $pfr_date = $game_date->format('Ymd');
    $gp_date = $game_date->format('mdY');
    $gp_opp = explode(' ', $opp->getTitle());
    if ($node->get('field_home_away')->value == 'Home') {
      $pfr_home = 'nwe';
      $gp_home = 'patriots';
      $gp_away = strtolower(end($gp_opp));
      $variables['schema_city'] = 'Foxboro';
      $variables['schema_state'] = 'MA';
    }
    else {
      $pfr_home = $opp->get('field_pfr_id')->value;
      $gp_home = strtolower(end($gp_opp));
      $gp_away = 'patriots';
      $game_location = _get_team_location(strtolower($team_short));
      $variables['schema_city'] = $game_location['city'];
      $variables['schema_state'] = $game_location['state'];
    }
    $variables['pfr_link'] = 'https://www.pro-football-reference.com/boxscores/' . $pfr_date . '0' . $pfr_home . '.htm';
    $game_season = $node->get('field_season')->value;
    $variables['season'] = intval($game_season);
    $variables['gamepass_link'] = 'https://gamepass.nfl.com/game/'.$gp_away.'-at-'.$gp_home.'-on-' . $gp_date;

    // Schema.org formatting.
    $variables['schema_date'] = $game_date->format('c');
    $variables['schema_opp'] = $opp->label();
    $variables['schema_name'] = $node->label();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dynasty_preprocess_field(&$variables, $hook) {
  // Game Video field.
  if ($variables['field_name'] == 'field_game_video') {
    $url = parse_url($variables['element'][0]['#context']['value']);
    $path = explode('/', $url['path']);
    $variables['video_type'] = $url['host'];
    $variables['video_id'] = end($path);
  }
  // Podcast MP3 field.
  if ($variables['field_name'] == 'field_mp3') {
    $link_array = parse_url($variables['element'][0]['#context']['value']);
    $path_array = explode('/', $link_array['path']);
    $variables['mp3'] = $path_array[6];
  }
}

/**
 * Implements template_preprocess_form().
 */
function dynasty_preprocess_form(&$variables) {
  $flex_forms = [
    'season-select-form',
    'player-select-form',
    'views-exposed-form-game-search-page-1',
    'views-exposed-form-highlight-search-page-1',
  ];
  if (in_array($variables['attributes']['id'], $flex_forms)) {
    $variables['attributes']['class'][] = 'tw-flex tw-spacing-between';
  }
}

function dynasty_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $id = $form['#id'];
  $forms = [
    'views-exposed-form-game-search-page-1',
    'views-exposed-form-highlight-search-page-1',
  ];
  if (in_array($id, $forms)) {
    $form['#info']['filter-search_api_fulltext']['label'] = '';
  }
}

function dynasty_preprocess_input(&$variables) {
  $element = $variables['element'];
  // Adding classes to search text box since Drupal won't recognize the
  // input--edit-search.html.twig file.
  if (strpos($element['#id'], 'edit-search') !== FALSE && $element['#type'] == 'textfield') {
    $variables['attributes']['class'][] = 'tw-h-12';
  }

}

function _get_team_location($team) {
$locations = [
  'cardinals' => ['city' => 'Glendale' , 'state' => 'AZ'],
  'falcons' => ['city' => 'Atlanta' , 'state' => 'GA'],
  'ravens' => ['city' => 'Baltimore' , 'state' => 'MD'],
  'bills' => ['city' => 'Orchard Park' , 'state' => 'NY'],
  'panthers' => ['city' => 'Charlotte' , 'state' => 'NC'],
  'bears' => ['city' => 'Chicago' , 'state' => 'IL'],
  'bengals' => ['city' => 'Cincinnati' , 'state' => 'OH'],
  'browns' => ['city' => 'Cleveland' , 'state' => 'OH'],
  'cowboys' => ['city' => 'Arlington' , 'state' => 'TX'],
  'broncos' => ['city' => 'Denver' , 'state' => 'CO'],
  'lions' => ['city' => 'Detroit' , 'state' => 'MI'],
  'packers' => ['city' => 'Green Bay' , 'state' => 'WI'],
  'texans' => ['city' => 'Houston' , 'state' => 'TX'],
  'colts' => ['city' => 'Indianapolis' , 'state' => 'IA'],
  'jaguars' => ['city' => 'Jacksonville' , 'state' => 'FL'],
  'chiefs' => ['city' => 'Kansas City' , 'state' => 'MO'],
  'raiders' => ['city' => 'Oakland' , 'state' => 'CA'],
  'chargers' => ['city' => 'San Diego' , 'state' => 'CA'],
  'rams' => ['city' => 'Los Angeles' , 'state' => 'CA'],
  'dolphins' => ['city' => 'Miami' , 'state' => 'FL'],
  'vikings' => ['city' => 'Minneapolis' , 'state' => 'MN'],
  'saints' => ['city' => 'New Orleans' , 'state' => 'LA'],
  'giants' => ['city' => 'East Rutherford' , 'state' => 'NJ'],
  'jets' => ['city' => 'East Rutherford' , 'state' => 'NJ'],
  'eagles' => ['city' => 'Philadelphia' , 'state' => 'PA'],
  'steelers' => ['city' => 'Pittsburgh' , 'state' => 'PA'],
  '49ers' => ['city' => 'Santa Clara' , 'state' => 'CA'],
  'seahawks' => ['city' => 'Seattle' , 'state' => 'WA'],
  'buccaneers' => ['city' => 'Tampa' , 'state' => 'FL'],
  'titans' => ['city' => 'Nashville' , 'state' => 'TN'],
  'redskins' => ['city' => 'Landover' , 'state' => 'MD']
];
  return $locations[$team];
}
