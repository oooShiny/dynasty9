<?php

/**
 * @file
 * Views data altering to opt-in to use the entity reference plugin in Core.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function views_core_entity_reference_help($route_name, RouteMatchInterface $arg) {
  switch ($route_name) {
    case 'help.page.views_core_entity_reference':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Opt in to using the Entity Reference filter that is provided by Core.') . '</p>';

      // Add a link to the Drupal.org project.
      $output .= '<p>';
      $output .= t('Visit the <a href=":project_link">Views Core Entity Reference project pages</a> on Drupal.org for more information.', [
        ':project_link' => 'https://www.drupal.org/project/views_core_entity_reference',
      ]);
      $output .= '</p>';

      return $output;
  }
}

/**
 * Implements hook_views_data_alter().
 */
function views_core_entity_reference_views_data_alter(&$data) {
  $manager = \Drupal::entityTypeManager();
  $field_config_storage = $manager->getStorage('field_config');
  /** @var \Drupal\field\FieldConfigInterface[] $field_configs */
  $field_configs = $field_config_storage->loadByProperties([
    'field_type' => 'entity_reference',
  ]);
  foreach ($field_configs as $field_config) {
    $table_name = $field_config->getTargetEntityTypeId() . '__' . $field_config->getName();
    $column_name = $field_config->getName() . '_target_id';
    if (
      isset($data[$table_name][$column_name]['filter']['id'])
      && in_array($data[$table_name][$column_name]['filter']['id'], ['numeric', 'string'])
    ) {
      $data[$table_name][$column_name]['filter']['id'] = 'entity_reference';
    }
  }
}
